{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FeedBackSummary = function FeedBackSummary() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSelected = _useState2[0],\n      setSelection = _useState2[1];\n\n  return _jsxs(ScrollView, {\n    children: [_jsx(View, {\n      style: {\n        backgroundColor: \"red\",\n        height: 40\n      },\n      children: _jsx(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: _jsx(Text, {\n          style: {\n            allignItems: \"center\",\n            fontSize: 20,\n            color: \"#93933\"\n          },\n          children: \"About Your Overall Visits \"\n        })\n      })\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        styles: {\n          alignItems: \"center\",\n          fontSize: 20\n        },\n        children: \"First Visit?\"\n      })\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.checkboxContainer,\n        children: _jsx(CheckBox, {\n          value: isSelected,\n          onValueChange: setSelection,\n          style: styles.checkbox\n        })\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Yes\"\n      })]\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.checkboxContainer,\n        children: _jsx(CheckBox, {\n          value: isSelected,\n          onValueChange: setSelection,\n          style: styles.checkbox\n        })\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"No\"\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    marginBottom: 2\n  },\n  checkbox: {\n    alignSelf: \"center\"\n  }\n});\nexport default FeedBackSummary;","map":{"version":3,"names":["React","useState","FeedBackSummary","isSelected","setSelection","backgroundColor","height","alignItems","justifyContent","allignItems","fontSize","color","styles","container","checkboxContainer","checkbox","label","StyleSheet","create","flex","flexDirection","marginBottom","alignSelf"],"sources":["D:/feedbackbtl/BeatleSurvey/OneDrive/Desktop/BeatleAnalyticsSurvey/Components/FeedBackSummary.js"],"sourcesContent":["import { StyleSheet,CheckBox, Text, ScrollView, View } from \"react-native\";\r\nimport React,{useState} from \"react\";\r\n\r\nconst FeedBackSummary = () => {\r\n  const [isSelected, setSelection] = useState(false);\r\n  return (\r\n    <ScrollView>\r\n      <View style={{ backgroundColor: \"red\", height: 40 }}>\r\n        <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n          <Text style={{allignItems:\"center\", fontSize:20, color:\"#93933\" }}> \r\n          About Your Overall Visits </Text>\r\n        </View>\r\n        \r\n      </View>\r\n\r\n      <View>\r\n        <Text styles={{alignItems:\"center\", fontSize:20}}>\r\n          First Visit?\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.container}>\r\n        <View style={styles.checkboxContainer}>\r\n          <CheckBox\r\n            value={isSelected}\r\n            onValueChange={setSelection}\r\n            style={styles.checkbox}\r\n          />\r\n\r\n        </View>\r\n        <Text style={styles.label}>Yes</Text>\r\n      </View>\r\n\r\n      <View style={styles.container}>\r\n        <View style={styles.checkboxContainer}>\r\n          <CheckBox\r\n            value={isSelected}\r\n            onValueChange={setSelection}\r\n            style={styles.checkbox}\r\n          />\r\n\r\n        </View>\r\n        <Text style={styles.label}>No</Text>\r\n      </View>   \r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    // alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  checkboxContainer: {\r\n    flexDirection: \"row\",\r\n    marginBottom: 2,\r\n  },\r\n  checkbox: {\r\n    alignSelf: \"center\",\r\n  },\r\n  // label: {\r\n    // marginLeft:40,\r\n    // marginTop:\r\n    // marginBottom:0,\r\n  // },\r\n});\r\n\r\nexport default FeedBackSummary;\r\n"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;EAC5B,gBAAmCD,QAAQ,CAAC,KAAD,CAA3C;EAAA;EAAA,IAAOE,UAAP;EAAA,IAAmBC,YAAnB;;EACA,OACE,MAAC,UAAD;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAE;QAAEC,eAAe,EAAE,KAAnB;QAA0BC,MAAM,EAAE;MAAlC,CAAb;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEC,UAAU,EAAE,QAAd;UAAwBC,cAAc,EAAE;QAAxC,CAAb;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAE;YAACC,WAAW,EAAC,QAAb;YAAuBC,QAAQ,EAAC,EAAhC;YAAoCC,KAAK,EAAC;UAA1C,CAAb;UAAA;QAAA;MADF;IADF,EADF,EASE,KAAC,IAAD;MAAA,UACE,KAAC,IAAD;QAAM,MAAM,EAAE;UAACJ,UAAU,EAAC,QAAZ;UAAsBG,QAAQ,EAAC;QAA/B,CAAd;QAAA;MAAA;IADF,EATF,EAeE,MAAC,IAAD;MAAM,KAAK,EAAEE,MAAM,CAACC,SAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,iBAApB;QAAA,UACE,KAAC,QAAD;UACE,KAAK,EAAEX,UADT;UAEE,aAAa,EAAEC,YAFjB;UAGE,KAAK,EAAEQ,MAAM,CAACG;QAHhB;MADF,EADF,EASE,KAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,KAApB;QAAA;MAAA,EATF;IAAA,EAfF,EA2BE,MAAC,IAAD;MAAM,KAAK,EAAEJ,MAAM,CAACC,SAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAED,MAAM,CAACE,iBAApB;QAAA,UACE,KAAC,QAAD;UACE,KAAK,EAAEX,UADT;UAEE,aAAa,EAAEC,YAFjB;UAGE,KAAK,EAAEQ,MAAM,CAACG;QAHhB;MADF,EADF,EASE,KAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,KAApB;QAAA;MAAA,EATF;IAAA,EA3BF;EAAA,EADF;AAyCD,CA3CD;;AA6CA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CADG;IAGTX,cAAc,EAAE;EAHP,CADoB;EAM/BM,iBAAiB,EAAE;IACjBM,aAAa,EAAE,KADE;IAEjBC,YAAY,EAAE;EAFG,CANY;EAU/BN,QAAQ,EAAE;IACRO,SAAS,EAAE;EADH;AAVqB,CAAlB,CAAf;AAoBA,eAAepB,eAAf"},"metadata":{},"sourceType":"module"}